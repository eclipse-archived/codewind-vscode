{
    "productName": "Codewind",
    "activeMsg": "Codewind Tools for VSCode are active!",
    "failedToReconnect": "Couldn't reconnect to Codewind at {{- uri }}. Try re-creating the connection.",
    "versionChanged": "Codewind at {{- uri }} was previously version {{ oldVersion }}, but is now {{ newVersion }}.",
    "errorSavingConnections": "Error saving connections: {{- err }}.",

    "statesSeparator": " or ",

    "focusOnProblems": "Go to Problems",

    "invalidPortNumber": "Invalid port \"{{ port }}\". Port must be a positive integer less than 65536.",
    "connectFailed": "Connecting to Codewind at {{- uri }} failed.",

    "command": {
        "noContainerForShell": "{{ projectName }} does not have an application container running. Wait until the project is Running.",
        "alreadyInCodewindWorkspace": "The Codewind workspace is already your workspace root.",
        "confirmDeleteProjectMsg": "Are you sure you want to remove {{ projectName }} from {{ connectionLabel }}?",
        "confirmDeleteBtn": "Remove Project",
        "alsoDeleteDirMsg": "Would you like to also delete the project directory at {{- dirPath }} ?",
        "alsoDeleteDirBtn": "Delete Directory",
        "dontDeleteDirBtn": "Don't Delete",
        "alwaysDeleteDirBtn": "Always",
        "neverDeleteDirBtn": "Never",
        "refreshedConnection": "Refreshed {{ label }}",
        "projectAlreadyBuilding": "{{ projectName }} is already building. Build request cancelled.",
        "explicitBuildNotNecessary": "{{ projectName }} has auto-build enabled. There is no need to request a build.",
        "seeProblemsView": "See the Problems view for details.",
        "generateFilesBtn": "Generate",
        "validate": "Validate",
        "removedConnection": "Removed Codewind connection at {{- uri }}."
    },

    "cmdResourcePrompt": {
        "noProjToRunOn":
            "There is no Codewind project to run this command on.",
        "noProjToRunOnWithStates":
            "There is no {{ states }} Codewind project to run this command on.",
        "noConnToRunOn":
            "The tools have not yet connected to Codewind. Start Local Codewind, or connect to a remote instance.",
        "noConnOrProjToRunOn":
            "There is no Codewind connection or project to run this command on.",
        "noConnOrProjToRunOnWithStates":
            "There is no Codewind connection, or {{ states }} project, to run this command on."
    },

    "debug": {
        "didNotConnectInTime": "Debugger did not attach within {{ timeoutS }}s.",
        "connectingToProject": "Attaching debugger to {{ projectName }}",
        "failedToAttach": "Failed to attach debugger to {{ projectName }}.",
        "failedToAttachWithUrl": "Failed to attach debugger to {{ projectName }} at {{- debugUrl }}.",
        "noDebugTypeKnown": "No debug type available for project of type {{ type }}.",
        "noDebugPort": "No debug port set for project {{ projectName }}. Try restarting the project into Debug mode again.",
        "errDetailSeparator": " ",
        "maybeAlreadyDebugging": "Are you already debugging this project?",
        "debuggerAttachSuccess": "Debugger attached to {{ projectName }} at {{- debugUrl }}.",
        "debugLaunchName": "Debug {{ projectName }}",
        "waitingBeforeDebugAttachStatusMsg": "Waiting before attaching debugger to {{ projectName }}"
    },

    "startup": {
        "openWorkspacePrompt": "Do you want to open your Codewind workspace folder now?\n\nTip: Open any folder in the Codewind view by right-clicking and selecting \"Open Codewind Workspace\"",
        "installPrompt": "Codewind requires the installation of Docker containers to run, which might take a few minutes to download. Do you want to complete the installation now?",
        "installRejected": "Codewind will remain unavailable until the Docker containers are installed. To initiate installation again, select Try Again or click the \"on/off\" toggle in the Codewind view.",
        "installFailed": "Codewind failed to install. The installer logs have been opened. To initiate installation again, select Try Again or click the \"on/off\" toggle in the Codewind view.",
        "installCompleted": "Codewind {{ version }} installation is complete",
        "installAffirmBtn": "Install",
        "okBtn": "OK",
        "tryAgainBtn": "Try Again",
        "moreInfoBtn": "More Info",
        "removeImagesBlockedStillRunning": "You cannot remove images if Codewind is still running. Stop Codewind, and try again.",
        "removeImagesModalWarning": "Are you sure you want to remove all Codewind Docker images? You will have to download them again before you can start Codewind again.",
        "backendUpgradeRequired": "You cannot use the local installation of Codewind without installing version {{ tag }} of the Codewind backend."
    },

    "logs": {
        "waitingForLogs": "Waiting for Codewind to send logs...",
        "noLongerUpdating": "This log is no longer updating: {{ reason }}.",
        "notUpdatingReasonDisconnect": "Codewind disconnected",
        "notUpdatingReasonDisabled": "the project has been disabled. The log will be recreated when there is new output"
    },

    "project": {
        "quickPickLabel": "{{ projectName }} ({{ projectType }} project)",
        "quickPickNotRunning": "[Not running]",
        "onDeletion": "{{ projectName }} was deleted in Codewind.",

        "alreadyRestarting": "Restart cancelled: {{ projectName }} is already restarting.",
        "restartingStatusMsg": "Restarting {{ projectName }} into {{ startMode }} mode",

        "restartSuccess": "Finished restarting {{ projectName }} in {{ startMode }} mode.",
        "genericErrorProjectRestart": "{{ projectName }} failed to restart.",
        "restartFailure": "Failed to restart {{ projectName }} in {{ startMode }} mode.",
        "restartFailureWithReason": "Failed to restart {{ projectName }} in {{ startMode }} mode: {{ reason }}.",
        "restartFailedReasonDebugFailure": "attaching the debugger failed. Try attaching the debugger again",
        "restartFailedReasonTimeout": "failed to restart within {{ timeoutS }} seconds",
        "restartFailedReasonDisconnect": "Codewind disconnected",
        "restartFailedReasonDisabled": "The project was disabled"
    },

    "openInBrowserCmd": {
        "canOnlyOpenStartedProjects": "{{ projectName }} is not running - wait until the project is Starting or Started and try again.",
        "failedDetermineAppUrl": "Could not determine application URL for {{ projectName }}.",
        "cantOpenDisconnected": "This connection is Disconnected. You cannot open Codewind if it is not running."
    },

    "openLogCmd": {
        "noLogsForDisabled": "Application Logs are not available for Disabled projects.",
        "projectIsNotStarted": "{{ projectName }} is {{ projectState }}; it might not have any application log output until it starts.",
        "noBuildLogsForType": "Build logs are not available for {{ projectType }} projects."
    },

    "requests": {
        "restartIntoMode": "Restarting into {{ startMode }} mode",
        "build": "Building",
        "autoBuildEnable": "Enabling auto build",
        "autoBuildDisable": "Disabling auto build",
        "projectEnable": "Enabling",
        "projectDisable": "Disabling",
        "generateMissingFiles": "Generating Dockerfile",
        "unbind": "Unbinding",
        "updatingSetting": "Updating {{ settingName }} for",
        "checkingAvailableLogs": "checking available logs",
        "togglingLogs": "toggling logs {{ onOrOff }}",
        "checkingMetrics": "checking metrics status",
        "autoInjectMetricsEnable": "Enabling Codewind Application Metrics injection",
        "autoInjectMetricsDisable": "Disabling Codewind Application Metrics injection",

        "requestSuccess":   "{{ projectName }}: {{ operationName }}",
        "requestFail":      "{{ projectName }}: {{ operationName }} failed: {{- err }}"
    },

    "treeView": {
        "connectionLabelSimple": "Projects",
        "connectionLabel": "Projects ({{ label }})",
        "notStartedConnectionLabel": "Codewind is stopped (Click to start)",
        "disconnectedConnectionLabel": "Connection Lost",
        "projectLabel": "{{ projectName }} {{- state }}"
    }
}
